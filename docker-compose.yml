version: "3.8"
services:
  reactclient:
    container_name: reactfrontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3009:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
  mysqldb:
    image: mysql:8.0.22
    container_name: mysqldb
    #Map port 3306 on the mysql container to port 3307 in the host
    ports:
      - "3307:3306"
    volumes:
      - datafiles:/var/lib/mysql
      - "~/sql-scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ultraroot
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: 1234
      MYSQL_DATABASE: bookservice

  mongodb:
    image: mongo
    container_name: mongo
    volumes:
      - mongodbdata:/data/db
    ports:
      - "27017:27017"
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  bookservice:
    container_name: bookservice
    build:
      context: ./CodexHub
      dockerfile: BookService/Dockerfile
    # image: bookservice:dev
    ports:
      - 5002:80
    depends_on:
      - mysqldb
      - rabbitmq
  userservice:
    container_name: userservice
    # image: userservice:dev
    ports:
      - 5001:80
    build:
      context: ./CodexHub
      dockerfile: UserService/Dockerfile
    depends_on:
      - mongodb
      - rabbitmq
  inventoryservice:
    container_name: inventoryservice
    # image: inventoryservice:dev
    build:
      context: ./CodexHub
      dockerfile: InventoryService/Dockerfile
    ports:
      - 5005:80
    depends_on:
      - mongodb
      - rabbitmq
  ocelotgateway:
    container_name: ocelotgateway
    # image: ocelotgateway:dev
    build:
      context: ./CodexHub
      dockerfile: OcelotGateway/Dockerfile
    ports:
      - 5021:80

volumes:
  mongodbdata:
  rabbitmqdata:
  datafiles:
